Description:
      This template deploys a VPC, with a two public and private subnets spread
      across two Availability Zones. It deploys an Internet Gateway, with a default
      route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
      and default routes for them in the private subnets.

Parameters:

  EnvironementName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdacityProject

  VpcCIDR:
    Description: VPC CIDR block
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: CIDR Block for public subnet in the Az1
    type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Description: CIDR Block for public subnet in the Az2
    type: String
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Description: CIDR Block for private subnet in the Az1
    type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Description: CIDR Block for private subnet in the Az2
    type: String
    Default: 10.0.3.0/24

Resources:

  VPC:
    Type: AWS::EC2:VPC
    Properties:
    CidrBlock: !Ref VpcCIDR
    EnableDnsHostnames: true
    Tags:
       - key: Name
         Value: !Ref EnvironementName

  InternetGateway:
    type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - key: Name
          value: !Ref EnvironementName

  InternetGatewayAttachement:
    type: AWS::EC2::VPCGatewayAttachment
    Proprties:
    InternetGatewayId: !Ref InternetGateway
    VpcId: !Ref VPC
    Tags:
      - key: Name
        value: !Ref EnvironementName

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Proprties:
      VpcId: !Ref VPC
      AvailabilityZone: !select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - key: Name
          Value: !sub ${EnvironementName} Public subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Proprties:
      VpcId: !Ref VPC
      AvailabilityZone: !select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - key: Name
          Value: !sub ${EnvironementName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Proprties:
      VpcId: !Ref VPC
      AvailabilityZone: !select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - key: Name
          Value: !sub ${EnvironementName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Proprties:
      VpcId: !Ref VPC
      AvailabilityZone: !select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - key: Name
          Value: !sub ${EnvironementName} Private Subnet (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachement
    Properties:
      Domain: VPC

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachement
    Properties:
      Domain: VPC

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
       AllocationId: !GetAtt NatGateway1EIP.AllocationId
       SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
       AllocationId: !GetAtt NatGateway2EIP.AllocationId
       SubnetId: !Ref PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Proprties:
      VpcId: !Ref VPC
      Tages:
        - key: Name
          value: !sub ${EnvironmentName} Public Routes

  DafaultPublicRoute:
    type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::Route
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !sub ${EnvironementName} Private Routes  (AZ1)

  DefaultPrivateRoute1:
    Type: InternetGatewayAttachement
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NatGateway1

  PrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !sub ${EnvironementName} Private Roues (AZ2)

  DefeultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PrivateSubnet2

  PrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:

  VPC:
    Decription: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironementName}-VPCID

  VPCPublicRouteTable:
    Description: Public Routing
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${EnvironementName}-PUB-RT

  VPCPrivateRouteTable1:
    Description: Private Routing AZ1
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub ${EnvironementName}-PRIV-RT1

  VPCPrivateRouteTable2:
    Description: Private Routing AZ2
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub ${EnvironementName}-PRIV-RT2

  PublicSubnets:
    Description:  A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironementName}-PUB-NETS

  PrivateSubnets:
    Description: A list of the private subnets
    value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${EnvironementName}-PRIV-NETS

  PublicSubnet1:
    Description: A reference to the public subnet in the AZ1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironementName}-PUB-SN1

  PublicSubnet2:
    Description: A reference to the public subnet in the AZ2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironementName}-PUB-SN2

  PrivateSubnet1:
    Description: A reference to the private subnet in the AZ1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !sub ${EnvironementName}-PRIV-SN1

  PrivateSubnet2:
    Description: A reference to the private subnet in the AZ2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !sub ${EnvironementName}-PRIV-SN2
